@page "/ParticipantesAlumnos"

<PageTitle>SSOE | Regristro Participantes</PageTitle>

<!-- <h1 class="Estilo1"><i class="fa fa-dropbox fa-md"></i> Registro para sorteo de estacionamiento</h1> -->  

@if (oCarreras is not null && oCarreras != null)
{


    <EditForm Model="@oParticipante" OnValidSubmit="@OnValidHandled" OnInvalidSubmit="@OnInvalidHandled_ScrollToTop">

    <DataAnnotationsValidator />

    <!-- ******************************************************************* AVISOS DE ALERTA ******************************************************************* 
    
    <div>
        <RadzenStack Gap="5">
            <RadzenAlert Title="" AllowClose="false" AlertStyle="AlertStyle.Success" Variant="Variant.Filled"
                            Visible="@(IdTipoPersonal == 1 || TipoPersonal == "alumno_inscrito" ? true : false)">
                Todos los campos son obligatorios.
            </RadzenAlert>
        </RadzenStack>

        <RadzenStack Gap="5">
            <RadzenAlert AllowClose="false" AlertStyle="AlertStyle.Warning" Variant="Variant.Filled" Shade="Shade.Dark">
                ATENCIÓN: En caso de que se detecte que existe duplicidad de datos de un mismo usuario,
                se le suspenderá el derecho del uso del estacionamiento.
            </RadzenAlert>
        </RadzenStack>
        </div> -->


    <!-- ******************************************************************* DATOS PERSONALES ******************************************************************* -->
    <RadzenCard class="mt-3">
    <RadzenFieldset AllowCollapse="true" ExpandTitle="DATOS PERSONALES" CollapseTitle="DATOS PERSONALES" ExpandAriaLabel="" CollapseAriaLabel="" Class="rz-border-base-500 rz-border-radius-1 rz-shadow-3">
        <HeaderTemplate>
            <span class="d-inline-flex align-items-center align-middle">
                <RadzenIcon Icon="account_box" class="me-1" /><b>DATOS PERSONALES</b>
            </span>
        </HeaderTemplate>
        <ChildContent>
            
            <div class="row">
                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Nombre(s)" AllowFloatingLabel="false" Variant="Variant.Flat" Class="w-100 mt-3" Disabled="false">
                        @* <Start><RadzenIcon Icon="person" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start> *@
                        <ChildContent>
                                <RadzenTextBox Name="@($@"names_{TipoParticipante}")" @bind-Value="@oParticipante.PartNombre" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="200" Placeholder="Escribe tu(s) nombre(s)"
                                            @oninput="@((e) => oParticipante.PartNombre = e.Value.ToString().ToUpper())"
                                            onkeypress="return /^[A-Za-z. ]+$/.test(String.fromCharCode(event.keyCode || event.which));" />
                             
                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartNombre)" />
                </div>

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Primer Apellido" AllowFloatingLabel="false" Variant="Variant.Flat" Class="w-100 mt-3" Disabled="false">
                        @* <Start><RadzenIcon Icon="person" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start> *@
                        <ChildContent>
                            <RadzenTextBox Name="@($@"lastName1_{TipoParticipante}")" @bind-Value="@oParticipante.PartPrimerApellido" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="200" Placeholder="Primer Apellido"
                                            @oninput="@((e) => oParticipante.PartPrimerApellido = e.Value.ToString().ToUpper())"
                                            onkeypress="return /^[A-Za-z. ]+$/.test(String.fromCharCode(event.keyCode || event.which));" />

                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartPrimerApellido)" />
                </div>

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Segundo Apellido" AllowFloatingLabel="false" Variant="Variant.Flat" Class="w-100 mt-3" Disabled="false">
                        @* <Start><RadzenIcon Icon="person" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start> *@
                        <ChildContent>
                            <RadzenTextBox Name="@($@"lastName2_{TipoParticipante}")" @bind-Value="@oParticipante.PartSegundoApellido" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="200" Placeholder="Segundo Apellido"
                                            @oninput="@((e) => oParticipante.PartSegundoApellido = e.Value.ToString().ToUpper())"
                                            onkeypress="return /^[A-Za-z. ]+$/.test(String.fromCharCode(event.keyCode || event.which));" />

                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartSegundoApellido)" />
                </div>

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="CURP" AllowFloatingLabel="false" Placeholder="" AllowClear="true" Variant="Variant.Outlined" Class="w-100 mt-3" Disabled="false">
                        <Start><RadzenIcon Icon="document_scanner" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                        <ChildContent>
                                <RadzenTextBox Name="@($@"curp_{TipoParticipante}")" @bind-Value="@oParticipante.PartCurp" style="border-bottom: 3px solid #026969;;" MinLength="0" MaxLength="18"
                                            @oninput="@((e) => oParticipante.PartCurp = e.Value.ToString().ToUpper())"
                                            onkeypress="return /^[A-Za-z0-9]+$/.test(String.fromCharCode(event.keyCode || event.which));" />
                        </ChildContent>
                        <Helper>
                            <RadzenText TextStyle="TextStyle.Body1" TagName="TagName.P" TextAlign="TextAlign.Justify">
                               
                            </RadzenText>
                        </Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartCurp)" />
                </div>

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="No. de Boleta" AllowFloatingLabel="false" Placeholder="" AllowClear="true" Variant="Variant.Outlined" Class="w-100 mt-3" Disabled="false">
                        <Start><RadzenIcon Icon="dialpad" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                        <ChildContent>
                            @if (IdTipoParticipante == 1)
                            {
                                <RadzenTextBox Name="@($@"boleta_{TipoParticipante}")" @bind-Value="@oParticipante.PartBoleta" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="18"
                                                Placeholder="@($@"****{oEscuelas.Data.EscNoEscuela}****")" aria-label="enter password"
                                    @oninput="(e => oParticipante.PartBoleta = e.Value.ToString())" @onkeyup="@ValidarBoleta" />
                            }
                            else if(IdTipoParticipante == 2)
                            {
                                    <RadzenMask Name="@($"boleta_{TipoParticipante}")" @bind-Value="@oParticipante.PartBoleta" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="10"
                                            Mask="*******" CharacterPattern="[A-Z0-9]" Placeholder="B******" Pattern="" />
                            } 
                        </ChildContent>
                        <Helper>
                                <RadzenText TextStyle="TextStyle.Caption" Text="@($@"{(IdTipoParticipante == 1 ? "(Formato Válido: xxxx60xxxx)" : "(Formato Válido: Bxxxxxxx)")}")" />
                        </Helper>
                    </RadzenFormField>
                    <!-- @if (IdTipoParticipante == 1)
                    {
                        <ValidationMessage For="@(() => oParticipante.PartBoleta)" />
                        <RadzenAlert Title="Ingresa tu Boleta" Text="@($@"Formato Válido: ****{oEscuelas.Data.EscNoEscuela}****")" AlertStyle="AlertStyle.Danger" Variant="Variant.Filled" Size="AlertSize.Small" Shade="Shade.Darker"
                                        ShowIcon="true" AllowClose="false" class="mb-0" @bind-Visible="flagErrorBoletaAlumno" />
                    }
                    else if (IdTipoParticipante] == 2)
                    {
                        <ValidationMessage For="@(() => oParticipante.PartBoleta)" />
                    }-->
                </div> 

                <!-- <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Tipo de Solicitante" AllowFloatingLabel="false" Variant="Variant.Outlined" Class="w-100 mt-3" Disabled="false">
                        <Start><RadzenIcon Icon="tag" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                        <ChildContent>
                            <RadzenDropDown Name="@($@"tipo_personal_{TipoParticipante}")"
                                            @bind-Value="@oParticipante.PartIdTipoParticipante"
                                            TValue="int"
                                            ValueProperty="TipopartNombre"
                                            TextProperty="TipopartNombre"
                                            Data="@oTipoParticipante.Data"
                                            AllowClear="true"
                                            AllowFiltering="true"
                                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                            FilterOperator="StringFilterOperator.Contains"
                                            AllowVirtualization="true"
                                            Placeholder="Selecciona una opción"
                                            FilterPlaceholder="Buscar..."
                                            Multiple="false"
                                            Chips="true"
                                            InputAttributes="@(new Dictionary<string,object>(){{ "font-family", "Arial" }})"
                                                style="border-bottom: 3px solid #026969;" />
                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartIdTipoParticipante)" />
                </div> -->

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Teléfono" AllowFloatingLabel="false" Variant="Variant.Outlined" Class="w-100 mt-3" Disabled="false">
                        <Start><RadzenIcon Icon="phone_iphone" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                        <ChildContent>
                            <RadzenMask @bind-Value="@oParticipante.PartNoTelCelular" MinLength="0" MaxLength="20" style="border-bottom: 3px solid #026969;"
                                        Mask="** ** ** ** **" CharacterPattern="[0-9]" Placeholder="00 00 00 00 00" />
                        </ChildContent>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartNoTelCelular)" />
                </div>

                @if(IdTipoParticipante == 1)
                {
                    <div class="col-md-4 col-lg-8">
                        <RadzenFormField Text="Carrera" AllowFloatingLabel="false" Variant="Variant.Outlined" Class="w-100 mt-3" Disabled="false">
                            <Start><RadzenIcon Icon="tag" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                            <ChildContent>
                                <RadzenDropDown Name="@($@"college_career_{TipoParticipante}")"
                                                @bind-Value="@oParticipante.PartIdCarrera"
                                                TValue="int"
                                                    ValueProperty="CarrNombre"
                                                    TextProperty="CarrNombre"
                                                Data="@oCarrera.Data"
                                                AllowClear="true"
                                                AllowFiltering="true"
                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                FilterOperator="StringFilterOperator.Contains"
                                                AllowVirtualization="true"
                                                Placeholder="Selecciona una opción"
                                                FilterPlaceholder="Buscar..."
                                                Multiple="false"
                                                Chips="true"
                                                InputAttributes="@(new Dictionary<string,object>(){{ "font-family", "Arial" }})"
                                                style="border-bottom: 3px solid #026969;" />
                            </ChildContent>
                            <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                        </RadzenFormField>
                        <ValidationMessage For="@(() => oParticipante.PartIdCarrera)" />
                    </div>

                    <div class="col-md-4 col-lg-4">
                        <RadzenFormField Text="Semestre" AllowFloatingLabel="false" Variant="Variant.Outlined" Class="w-100 mt-3" Disabled="false">
                            <Start><RadzenIcon Icon="tag" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                            <ChildContent>
                                <RadzenDropDown Name="@($@"semester_{TipoParticipante}")"
                                                @bind-Value="@oParticipante.PartIdSemestre"
                                                TValue="int"
                                                ValueProperty="Key"
                                                TextProperty="Value"
                                                Data="@oSemestres"
                                                AllowClear="true"
                                                AllowFiltering="true"
                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                FilterOperator="StringFilterOperator.Contains"
                                                AllowVirtualization="true"
                                                Placeholder="Selecciona una opción"
                                                FilterPlaceholder="Buscar..."
                                                Multiple="false"
                                                Chips="true"
                                                InputAttributes="@(new Dictionary<string,object>(){{ "font-family", "Arial" }})"
                                                style="border-bottom: 3px solid #026969;" />
                            </ChildContent>
                            <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                        </RadzenFormField>
                        <ValidationMessage For="@(() => oParticipante.PartIdSemestre)" />
                    </div>    
                }

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="@($@"{(ActionAddEdit == "agregar" ? "Correo Electrónico Personal" : "Correo Electrónico Personal Actual")}")" AllowFloatingLabel="false" Placeholder="" AllowClear="true" Variant="Variant.Outlined" Class="w-100 mt-3" Disabled="false">
                        <Start><RadzenIcon Icon="email" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                        <ChildContent>
                                <RadzenTextBox Name="@($@"email_personal_{TipoParticipante}")" @bind-Value="@oParticipante.PartEmail" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="100"
                                            Disabled="@(ActionAddEdit == "actualizar" ? true : false)" ReadOnly="@(ActionAddEdit == "actualizar" ? true : false)" />
                        </ChildContent>
                        <Helper>
                            <RadzenText TextStyle="TextStyle.Caption" TagName="TagName.Div" TextAlign="TextAlign.Justify" class="alert alert-info my-1 p-2"
                                        Text="@($@"{( ActionAddEdit == "actualizar" ? "En caso de cambio de Correo Electrónico Personal, levanta una Solicitud (Ticket)." : "En caso de no contar con un Correo Personal, le recomendamos crear uno con dominio válido (gmail, outlook, hotmail, yahoo, msn, live, etc)." )}")" />
                        </Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartEmail)" />
                </div>

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Contraseña" AllowFloatingLabel="false" Placeholder="" AllowClear="true" Variant="Variant.Outlined" Class="w-100 mt-3" Disabled="false">
                        <Start><RadzenIcon Icon="vpn_key" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                        <ChildContent>
                            @if (ActionAddEdit == "agregar")
                            {
                                    <RadzenTextBox Name="@($@"contraseña_{TipoParticipante}")" @bind-Value="@oParticipante.PartContraseña" style="border-bottom: 3px solid #026969 MinLength="0" MaxLength="20" aria-label="enter password"
                                                Visible="@(!VisibleContraseña)"
                                                @oninput="(e => oParticipante.PartContraseña = e.Value.ToString())"
                                                @onkeyup="@CompararContraseñas" />
                                <RadzenPassword Name="@($@"contraseña_visible_{TipoParticipante}")" @bind-Value="@oParticipante.PartContraseña" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="20" aria-label="enter password"
                                                Visible="@VisibleContraseña"
                                                @oninput="(e => oParticipante.PartContraseña = e.Value.ToString())"
                                                @onkeyup="@CompararContraseñas" />
                            }
                            else if (ActionAddEdit == "actualizar")
                            {
                                    <RadzenTextBox Name="@($@"contraseña_{TipoParticipante}")" @bind-Value="@PartContraseña" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="20" aria-label="enter password"
                                                Visible="@(!VisibleContraseña)"
                                                @oninput="(e => PartContraseña = e.Value.ToString())"
                                                @onkeyup="@CompararContraseñas" />
                                    <RadzenPassword Name="@($@"contraseña_visible_{TipoParticipante}")" @bind-Value="@PartContraseña" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="20" aria-label="enter password"
                                                Visible="@VisibleContraseña"
                                                @oninput="(e => PartContraseña = e.Value.ToString())"
                                                @onkeyup="@CompararContraseñas" />
                            }
                        </ChildContent>
                        <End>
                            <RadzenButton Icon="@(VisibleContraseña ? "visibility" : "visibility_off")"
                                            Click="@ToggleContraseña"
                                            Variant="Variant.Text"
                                            Size="ButtonSize.Small"
                                            ButtonStyle="ButtonStyle.Secondary"
                                            Shade="Shade.Dark" />
                        </End>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartContraseña)" />
                </div>

                <div class="col-md-4 col-lg-4 mb-3">
                    <RadzenFormField Text="Confirmar Contraseña" AllowFloatingLabel="false" Variant="Variant.Outlined" class="w-100 mt-3">
                        <Start><RadzenIcon Icon="lock" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                        <ChildContent>
                            <RadzenTextBox Name="@($@"confirmar_contraseña_{TipoParticipante}")" @bind-Value="@PartConfirmarContraseña" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="20"
                                            @oninput="(e => PartConfirmarContraseña = e.Value.ToString())"
                                            @onkeyup="@CompararContraseñas"
                                            Visible="@(!VisibleConfirmarContraseña)" />
                            <RadzenPassword Name="@($@"confirmar_contraseña_visible_{TipoParticipante}")" @bind-Value="@PartConfirmarContraseña" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="20" aria-label="enter password"
                                            @oninput="(e => PartConfirmarContraseña = e.Value.ToString())"
                                            @onkeyup="@CompararContraseñas"
                                            Visible="@VisibleConfirmarContraseña" />
                        </ChildContent>
                        <End>
                            <RadzenButton Icon="@(VisibleConfirmarContraseña ? "visibility" : "visibility_off")"
                                            Click="ToggleConfirmarContraseña"
                                            Variant="Variant.Text"
                                            Size="ButtonSize.Small"
                                            ButtonStyle="ButtonStyle.Secondary"
                                            Shade="Shade.Dark" />
                        </End>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>

                    <RadzenAlert Title="Ingresa las contraseñas" Text="Verificar que coincidan." AlertStyle="AlertStyle.Danger" Variant="Variant.Filled" Size="AlertSize.Small" Shade="Shade.Darker"
                                    ShowIcon="true" AllowClose="false" class="mb-0" @bind-Visible="flagErrorPasswords" />
                </div>
            </div>

        </ChildContent>
        <SummaryTemplate>
            
        </SummaryTemplate>
    </RadzenFieldset>
    </RadzenCard>



    <!-- ******************************************************************* DATOS DEL VEHÍCULO ******************************************************************* -->
    <RadzenCard>
    <RadzenFieldset AllowCollapse="true" ExpandTitle="DATOS DEL VEHÍCULO" CollapseTitle="DATOS DEL VEHÍCULO" ExpandAriaLabel="" CollapseAriaLabel="" Class="rz-border-base-500 rz-border-radius-1 rz-shadow-3">
        <HeaderTemplate>
            <span class="d-inline-flex align-items-center align-middle">
                    <!-- <RadzenIcon Icon="account_box" class="me-1" /><b>DATOS DEL VEHÍCULO</b> -->
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-car-front-fill" viewBox="0 0 16 16">
                    <path d="M2.52 3.515A2.5 2.5 0 0 1 4.82 2h6.362c1 0 1.904.596 2.298 1.515l.792 1.848c.075.175.21.319.38.404.5.25.855.715.965 1.262l.335 1.679q.05.242.049.49v.413c0 .814-.39 1.543-1 1.997V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.338c-1.292.048-2.745.088-4 .088s-2.708-.04-4-.088V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.892c-.61-.454-1-1.183-1-1.997v-.413a2.5 2.5 0 0 1 .049-.49l.335-1.68c.11-.546.465-1.012.964-1.261a.8.8 0 0 0 .381-.404l.792-1.848ZM3 10a1 1 0 1 0 0-2 1 1 0 0 0 0 2m10 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2M6 8a1 1 0 0 0 0 2h4a1 1 0 1 0 0-2zM2.906 5.189a.51.51 0 0 0 .497.731c.91-.073 3.35-.17 4.597-.17s3.688.097 4.597.17a.51.51 0 0 0 .497-.731l-.956-1.913A.5.5 0 0 0 11.691 3H4.309a.5.5 0 0 0-.447.276L2.906 5.19Z" />
                </svg>&nbsp;
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bicycle" viewBox="0 0 16 16">
                    <path d="M4 4.5a.5.5 0 0 1 .5-.5H6a.5.5 0 0 1 0 1v.5h4.14l.386-1.158A.5.5 0 0 1 11 4h1a.5.5 0 0 1 0 1h-.64l-.311.935.807 1.29a3 3 0 1 1-.848.53l-.508-.812-2.076 3.322A.5.5 0 0 1 8 10.5H5.959a3 3 0 1 1-1.815-3.274L5 5.856V5h-.5a.5.5 0 0 1-.5-.5m1.5 2.443-.508.814c.5.444.85 1.054.967 1.743h1.139zM8 9.057 9.598 6.5H6.402zM4.937 9.5a2 2 0 0 0-.487-.877l-.548.877zM3.603 8.092A2 2 0 1 0 4.937 10.5H3a.5.5 0 0 1-.424-.765zm7.947.53a2 2 0 1 0 .848-.53l1.026 1.643a.5.5 0 1 1-.848.53z" />
                    </svg>&nbsp;
                <b>DATOS DEL VEHÍCULO</b>
            </span>
        </HeaderTemplate>
        <ChildContent>

            <div class="row">

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Tipo de Vehículo" AllowFloatingLabel="false" Variant="Variant.Outlined" Class="w-100 mt-3" Disabled="false">
                        <Start><RadzenIcon Icon="tag" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                        <ChildContent>
                            <RadzenDropDown Name="@($@"tipo_vehiculo_{TipoParticipante}")"
                                            @bind-Value="@oParticipante.PartIdTipoParticipante"
                                            TValue="int"
                                            ValueProperty="TipoVehiculo"
                                            TextProperty="TipoVehiculo"
                                            Data="@oTipoVehiculo.Data"
                                            AllowClear="true"
                                            AllowFiltering="true"
                                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                            FilterOperator="StringFilterOperator.Contains"
                                            AllowVirtualization="true"
                                            Placeholder="Selecciona una opción"
                                            FilterPlaceholder="Buscar..."
                                            Multiple="false"
                                            Chips="true"
                                            InputAttributes="@(new Dictionary<string,object>(){{ "font-family", "Arial" }})"
                                            style="border-bottom: 3px solid #026969;" />
                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartIdTipoVehiculo)" />
                </div>


                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Placa" AllowFloatingLabel="false" Variant="Variant.Flat" Class="w-100 mt-3" Disabled="false">
                        @* <Start><RadzenIcon Icon="person" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start> *@
                        <ChildContent>
                            <RadzenTextBox Name="@($@"placa_{TipoParticipante}")" @bind-Value="@oParticipante.PartPlaca" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="200" 
                                            @oninput="@((e) => oParticipante.PartPlaca = e.Value.ToString().ToUpper())" />

                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartPlaca)" />
                </div>

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Estado(Placa)" AllowFloatingLabel="false" Variant="Variant.Outlined" Class="w-100 mt-3" Disabled="false">
                        <Start><RadzenIcon Icon="tag" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                        <ChildContent>
                            <RadzenDropDown Name="@($@"estado_placa_{TipoParticipante}")"
                                            @bind-Value="@oParticipante.PartIdEdoRepMexVehiculo"
                                            TValue="int"
                                            ValueProperty="EdoNombre"
                                            TextProperty="EdoNombre"
                                            Data="@oEdoRepMex.Data"
                                            AllowClear="true"
                                            AllowFiltering="true"
                                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                            FilterOperator="StringFilterOperator.Contains"
                                            AllowVirtualization="true"
                                            Placeholder="Selecciona una opción"
                                            FilterPlaceholder="Buscar..."
                                            Multiple="false"
                                            Chips="true"
                                            InputAttributes="@(new Dictionary<string,object>(){{ "font-family", "Arial" }})"
                                            style="border-bottom: 3px solid #026969;" />
                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartIdEdoRepMexVehiculo)" />
                </div>

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Uso(Tipo de Servicio)" AllowFloatingLabel="false" Variant="Variant.Outlined" Class="w-100 mt-3" Disabled="false">
                        <Start><RadzenIcon Icon="tag" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                        <ChildContent>
                            <RadzenDropDown Name="@($@"tipo_servicio_{TipoParticipante}")"
                                            @bind-Value="@oParticipante.PartIdTipoPlaca"
                                            TValue="int"
                                            ValueProperty="TipoPlaca"
                                            TextProperty="TipoPlaca"
                                            Data="@oTipoPlaca.Data"
                                            AllowClear="true"
                                            AllowFiltering="true"
                                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                            FilterOperator="StringFilterOperator.Contains"
                                            AllowVirtualization="true"
                                            Placeholder="Selecciona una opción"
                                            FilterPlaceholder="Buscar..."
                                            Multiple="false"
                                            Chips="true"
                                            InputAttributes="@(new Dictionary<string,object>(){{ "font-family", "Arial" }})"
                                            style="border-bottom: 3px solid #026969;" />
                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartIdTipoPlaca)" />
                </div>


                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Marca" AllowFloatingLabel="false" Variant="Variant.Flat" Class="w-100 mt-3" Disabled="false">
                        @* <Start><RadzenIcon Icon="person" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start> *@
                        <ChildContent>
                                <RadzenTextBox Name="@($@"marca_{TipoParticipante}")" @bind-Value="@oParticipante.PartMarca" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="200"
                                            @oninput="@((e) => oParticipante.PartMarca = e.Value.ToString().ToUpper())" />

                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartMarca)" />
                </div>

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Modelo" AllowFloatingLabel="false" Variant="Variant.Flat" Class="w-100 mt-3" Disabled="false">
                        @* <Start><RadzenIcon Icon="person" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start> *@
                        <ChildContent>
                                <RadzenTextBox Name="@($@"modelo_{TipoParticipante}")" @bind-Value="@oParticipante.PartModelo" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="200"
                                            @oninput="@((e) => oParticipante.PartModelo = e.Value.ToString().ToUpper())" />

                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartModelo)" />
                </div>

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Version" AllowFloatingLabel="false" Variant="Variant.Flat" Class="w-100 mt-3" Disabled="false">
                        @* <Start><RadzenIcon Icon="person" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start> *@
                        <ChildContent>
                            <RadzenTextBox Name="@($@"version_{TipoParticipante}")" @bind-Value="@oParticipante.PartVersion" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="200"
                                            @oninput="@((e) => oParticipante.PartVersion = e.Value.ToString().ToUpper())" />

                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartVersion)" />
                </div>
                               
                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Año" AllowFloatingLabel="false" Variant="Variant.Flat" Class="w-100 mt-3" Disabled="false">
                        @* <Start><RadzenIcon Icon="person" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start> *@
                        <ChildContent>
                                <RadzenTextBox Name="@($@"año{TipoParticipante}")" @bind-Value="@año" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="200" />
                                @* <RadzenNumeric ShowUpDown="false" TValue="int?" @bind-Value="@oParticipante.PartAño"/> *@
                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartAño)" />
                </div> 

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Color" AllowFloatingLabel="false" Variant="Variant.Flat" Class="w-100 mt-3" Disabled="false">
                        @* <Start><RadzenIcon Icon="person" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start> *@
                        <ChildContent>
                            <RadzenTextBox Name="@($@"color_{TipoParticipante}")" @bind-Value="@oParticipante.PartColor" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="200"
                                            @oninput="@((e) => oParticipante.PartColor = e.Value.ToString().ToUpper())" />

                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartColor)" />
                </div>

                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="No. de Empleado" AllowFloatingLabel="false" Variant="Variant.Flat" Class="w-100 mt-3" Disabled="false">
                        @* <Start><RadzenIcon Icon="person" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start> *@
                        <ChildContent>
                            <RadzenTextBox Name="@($@"no_empleado_{TipoParticipante}")" @bind-Value="@oParticipante.PartNoEmpleado" style="border-bottom: 3px solid #026969;" MinLength="0" MaxLength="200"
                                            @oninput="@((e) => oParticipante.PartNoEmpleado = e.Value.ToString().ToUpper())" />

                        </ChildContent>
                        <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartNoEmpleado)" />
                </div>
                
            </div> <!-- /div class="row" -->

        </ChildContent>
        <SummaryTemplate>

        </SummaryTemplate>
    </RadzenFieldset>
    </RadzenCard>


    <div>
        <RadzenStack Gap="0">
            <RadzenAlert Variant="@variant" AlertStyle="@alertStyle" Size="@size" Shade="Shade.Darker" AllowClose=false>
                ATENCIÓN: Antes de enviar los documentos, asegurate de renombrarlos como se muestran en los siguientes ejemplos.
            </RadzenAlert>
        </RadzenStack>
    </div>


    <!-- ******************************************************************* Subida de Archivos ******************************************************************* -->
    <RadzenCard Style="margin-bottom:20px">
        <RadzenFieldset AllowCollapse="true" ExpandTitle="DATOS DEL VEHÍCULO" CollapseTitle="DATOS DEL VEHÍCULO" ExpandAriaLabel="" CollapseAriaLabel="" Class="rz-border-base-500 rz-border-radius-1 rz-shadow-3">
            <HeaderTemplate>
                <span class="d-inline-flex align-items-center align-middle">
                    <!-- <RadzenIcon Icon="account_box" class="me-1" /><b>DATOS DEL VEHÍCULO</b> -->
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-arrow-up" viewBox="0 0 16 16">
                        <path d="M8.5 11.5a.5.5 0 0 1-1 0V7.707L6.354 8.854a.5.5 0 1 1-.708-.708l2-2a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 7.707z" />
                        <path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2M9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5z" />
                    </svg>&nbsp;
                    <b>ARCHIVOS REQUERIDOS</b>
                </span>
            </HeaderTemplate>
            <ChildContent>
                <div class="row">
                    <div class="col-md-4 col-lg-4">
                        <RadzenFormField Text="Credencial" AllowFloatingLabel="false" Variant="Variant.Outlined" class="w-100 mt-3" Disable="false">
                            <Start><RadzenIcon Icon="picture_as_pdf" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                            <ChildContent>
                                <RadzenUpload @ref="oUploadFile_CredencialIpnIne"
                                                Url="@($"/api/RespositoryFiles/UploadSingleFile/{folder}/{idResponse}/{oParticipante.PartFileNameCredencialIpnine}/{oGuid}")" 
                                                Accept=".pdf" Icon="upload" ChooseText="Examinar Archivo" 
                                                Auto="false" Multiple="false" 
                                                Change=@(args => OnChangeFiles(args, Credencial_Ipn_Ine))
                                                Error=@(args => OnErrorFiles(args, "FileInput"))
                                                InputAttributes="@(new Dictionary<string, object>() { { "cursor", "pointer" } })"
                                                Progress="@(args => OnProgressFiles(args, "Manual Upload"))"
                                                Complete="@(args => OnCompleteFiles(args))" />
                            </ChildContent>
                            <Helper>
                                <RadzenText TextStyle="TextStyle.Body1" TagName="TagName.P" TextAlign="TextAlign.JustifyAll" Style="font-size:small">
                                    Subir credencial INE o Escolar.
                                </RadzenText>
                            </Helper>
                        </RadzenFormField>
                        <ValidationMessage For="@(() => oParticipante.PartFileNameCredencialIpnine)" />
                        <ValidationMessage For="@(() => oParticipante.PartFileSizeCredencialIpnine)" />
                    </div>

                    <div class="col-md-4 col-lg-4">
                        <RadzenFormField Text="Tarjeta de Circulación" AllowFloatingLabel="false" Variant="Variant.Outlined" class="w-100 mt-3" Disable="false">
                            <Start><RadzenIcon Icon="picture_as_pdf" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                            <ChildContent>
                                <RadzenUpload @ref="oUploadFile_TarjetaCirculacion"
                                                Url="@($"/api/RespositoryFiles/UploadSingleFile/{folder}/{idResponse}/{oParticipante.PartFileNameTarjetaCirculacion}/{oGuid}")" 
                                                Accept=".pdf" Icon="upload" ChooseText="Examinar Archivo" 
                                                Auto="false" Multiple="false" 
                                                Change=@(args => OnChangeFiles(args, Tarjeta_Circulacion))
                                                Error=@(args => OnErrorFiles(args, "FileInput"))
                                                InputAttributes="@(new Dictionary<string, object>() { { "cursor", "pointer" } })"
                                                Progress="@(args => OnProgressFiles(args, "Manual Upload"))"
                                                Complete="@(args => OnCompleteFiles(args))" />
                            </ChildContent>
                            <Helper>
                                <RadzenText TextStyle="TextStyle.Body1" TagName="TagName.P" TextAlign="TextAlign.JustifyAll">

                                </RadzenText>
                            </Helper>
                        </RadzenFormField>
                        <ValidationMessage For="@(() => oParticipante.PartFileNameTarjetaCirculacion)" />
                        <ValidationMessage For="@(() => oParticipante.PartFileSizeTarjetaCirculacion)" />
                    </div>

                    <div class="col-md-4 col-lg-4">
                        <RadzenFormField Text="Licencia de Conducir" AllowFloatingLabel="false" Variant="Variant.Outlined" class="w-100 mt-3" Disable="false">
                            <Start><RadzenIcon Icon="picture_as_pdf" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                            <ChildContent>
                                <RadzenUpload @ref="oUploadFile_LicenciaConducir"
                                                Url="@($"/api/RespositoryFiles/UploadSingleFile/{folder}/{idResponse}/{oParticipante.PartFileNameLicenciaConducir}/{oGuid}")" 
                                                Accept=".pdf" Icon="upload" ChooseText="Examinar Archivo" 
                                                Auto="false" Multiple="false"
                                                Change=@(args => OnChangeFiles(args, Licencia_Conducir))
                                                Error=@(args => OnErrorFiles(args, "FileInput"))
                                                InputAttributes="@(new Dictionary<string, object>() { { "cursor", "pointer" } })"
                                                Progress="@(args => OnProgressFiles(args, "Manual Upload"))"
                                                Complete="@(args => OnCompleteFiles(args))" />
                            </ChildContent>
                            <Helper>
                                <RadzenText TextStyle="TextStyle.Body1" TagName="TagName.P" TextAlign="TextAlign.JustifyAll">

                                </RadzenText>
                            </Helper>
                        </RadzenFormField>
                        <ValidationMessage For="@(() => oParticipante.PartFileNameLicenciaConducir)" />
                        <ValidationMessage For="@(() => oParticipante.PartFileSizeLicenciaConducir)" />
                    </div>
                </div>
                
               
                <div class="col-md-4 col-lg-4">
                    <RadzenFormField Text="Comprobante de Estudios" AllowFloatingLabel="false" Variant="Variant.Outlined" class="w-100 mt-3" Disable="false">
                        <Start><RadzenIcon Icon="picture_as_pdf" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                        <ChildContent>
                            <RadzenUpload @ref="oUploadFile_ComprobanteEstudios"
                                            Url="@($"/api/RespositoryFiles/UploadSingleFile/{folder}/{idResponse}/{oParticipante.PartFileSizeComprobanteEstudiosHorario}/{oGuid}")" 
                                            Accept=".pdf" Icon="upload" ChooseText="Examinar Archivo" 
                                            Auto="false" Multiple="false" 
                                            Change=@(args => OnChangeFiles(args, Comprobante_Estudios))
                                            Error=@(args => OnErrorFiles(args, "FileInput"))
                                            InputAttributes="@(new Dictionary<string, object>() { { "cursor", "pointer" } })"
                                            Progress="@(args => OnProgressFiles(args, "Manual Upload"))"
                                            Complete="@(args => OnCompleteFiles(args))" />
                        </ChildContent>
                        <Helper>
                            <RadzenText TextStyle="TextStyle.Body1" TagName="TagName.P" TextAlign="TextAlign.JustifyAll">

                            </RadzenText>
                        </Helper>
                    </RadzenFormField>
                    <ValidationMessage For="@(() => oParticipante.PartFileNameComprobanteEstudiosHorario)" />
                    <ValidationMessage For="@(() => oParticipante.PartFileSizeComprobanteEstudiosHorario)" />
                </div>
            </ChildContent>
        </RadzenFieldset>
    </RadzenCard>

    <!-- ******************************************************************* CARD ReCAPTCHA ******************************************************************* -->
    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Wrap="FlexWrap.Wrap" Gap="10px" class="rz-mt-5">
        <ReCAPTCHA @ref="oReCAPTCHAComponent" SiteKey="6Ld6058pAAAAACiEYq0Khine3FWbHZpfyEraTlOX" OnSuccess="OnSuccess" OnExpired="OnExpired" /> 
        @if (ActionAddEdit == "agregar")
        {
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Wrap="FlexWrap.NoWrap" Gap="0px" Class="" Style="font-family:var(--rz-text-font-family);">
                <RadzenCheckBox Name="@($@"aviso_privacidad_{TipoParticipante}")" TValue="bool" @bind-Value="@aceptar_aviso_privacidad" TriState="false" Change="@(args => aceptar_aviso_privacidad = args)" Disabled="false" ReadOnly="false" />
                <RadzenLabel Text="He leído y acepto los términos y condiciones del" Component="@($@"aviso_privacidad_{TipoParticipante}")" Style="margin-left: 8px; vertical-align: middle;" />&ensp;
                <a style="cursor:pointer;" @onclick="@(() => ShowDialogModal_iFrame("./documentos/COMPROBANTE-ESTUDIO.pdf", "Aviso de Privacidad para la Protección de Datos Personales"))" class="icon-link icon-link-hover">
                    <b>Aviso</b> de <strong>Privacidad</strong>
                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-box-arrow-up-right" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5z" />
                        <path fill-rule="evenodd" d="M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0v-5z" />
                    </svg>
                </a>
            </RadzenStack>
        }
        <ValidationSummary class="rz-my-0" />
        <RadzenButton Text="@TextButton"
                        BusyText="@BusyTextButton"
                        ButtonStyle="ButtonStyle.Success"
                        ButtonType="ButtonType.Submit"
                        IsBusy="@busyLoading"
                        Icon="@IconButton"
                        class="w-100 rz-ripple"
                        Shade="Shade.Default"
                        Disabled="@DisablePostButton"
                        Size="ButtonSize.Large"
                        Variant="Variant.Filled" />
        </RadzenStack>

    </EditForm>

    <ButtonScrollToTop />
}
else
{
    <LoadingComponent />
}


@code {

    @*///////////////////////////////////////////////  OBTENER PARÁMETROS PARA AGREGAR O ACTUALIZAR DATA  ///////////////////////////////////////////////*@
    [Parameter] public string? ActionAddEdit { get; set; }
    [Parameter] public RequestDTO_Participante? oEditParticipante { get; set; }


    @*///////////////////////////////////////////////  OBTENER PARÁMETROS DEL TIPO DE PARTICIPANTE  ///////////////////////////////////////////////*@
    [Parameter] public string? TipoParticipante { get; set; }
    [Parameter] public int IdTipoParticipante { get; set; }
    string año;

    @*///////////////////////////////////////////////  INICIALIZAR OBJETO PARTICIPANTE  ///////////////////////////////////////////////*@
    private RequestDTO_Participante? oParticipante = new();

    @*///////////////////////////////////////////////  INICIALIZAR OBJETOS Y OBTENER DATA ASYNC  ///////////////////////////////////////////////*@
    public Response<List<RequestViewModel_TipoParticipante>>? oTipoParticipante = new();
    public Response<List<RequestViewModel_Carrera>>? oCarrera = new();
    public Response<List<RequestViewModel_Semestre>>? oSemestre = new();
    private Response<List<RequestViewModel_Escuela>>? oEscuela = new();
    public Response<List<RequestViewModel_TipoVehiculo>>? oTipoVehiculo = new();
    public Response<List<RequestViewModel_EdoRepMex>>? oEdoRepMex = new();
    public Response<List<RequestViewModel_TipoPlaca>>? oTipoPlaca = new();
    private Response<RequestViewModel_Escuela> oEscuelas = new();
    private string srcCredencialIpnine = string.Empty;
    private string srcTarjetaCirculacion = string.Empty;
    private string srcLicenciaConducir = string.Empty;
    private string srcComprobanteEstudiosHorario = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        oTipoParticipante = await servicioTipoParticipante.GetAllDataByStatusAsync(0);
        oCarrera = await servicioCarrera.GetAllDataByStatusAsync(0);
        oSemestre = await servicioSemestre.GetAllDataByStatusAsync(0);
        oEscuela = await servicioEscuela.GetAllDataByStatusAsync(0);
        oEscuelas = await servicioEscuela.GetDataByIdAsync(1);
        oTipoVehiculo = await servicioTipoVehiculo.GetAllDataByStatusAsync(0);
        oEdoRepMex = await servicioEdoRepMex.GetAllDataByStatusAsync(0);
        oTipoPlaca = await servicioTipoPlaca.GetAllDataByStatusAsync(0);

        @if (ActionAddEdit == "agregar")
        {
            @* DATOS ID DEL USUARIO *@
            oParticipante.IdParticipante = 0;
            oParticipante.PartIdRol = 1;                        // FK ID del Rol (1 - Usuario del Sorteo, 2 - Administrador del Sorteo)
            oParticipante.PartIdTipoParticipante = IdTipoParticipante;  // FK ID del Tipo de Participante ([1 - Alumno Inscrito], [2 - Maestria], [3 - Administrativo], [4 - Docente], [5 - Honorarios])
            @* DATOS PERSONALES *@
            oParticipante.PartNombre = "";                      // Nombre del Participante Solicitante o Administrador
            oParticipante.PartPrimerApellido = "";              // Primer Apellido del Participante Solicitante o Administrador
            oParticipante.PartSegundoApellido = "";             // Segundo Apellido del Participante Solicitante o Administrador
            oParticipante.PartCurp = "";                        // CURP con 18 caracteres como mínimo
            oParticipante.PartNoTelCelular = "";                // Número de Celular 
            oParticipante.PartNoEmpleado = "";
            @* DATOS ACADÉMICOS *@
            if (IdTipoParticipante == 1)                        // Número de Boleta del Participante (Alumno Inscrito)
            {
                oParticipante.PartBoleta = "";
            }
            else if (IdTipoParticipante == 2)                   // Número de Boleta del Participante (Alumno de Maestria)
            {
                //oParticipante.PartBoleta = $@"0000{oEscuela?.Data?}0000";
                oParticipante.PartBoleta = "B000000";
            }
            if (IdTipoParticipante == 1)
            {
                // oParticipante.PartIdCarrera = 1;             // FK ID de la Carrera del Alumno
                oParticipante.PartIdSemestre = 1;               // Semestre que cursa el Alumno Inscrito
            }
            else if (IdTipoParticipante == 2)
            {
                oParticipante.PartIdCarrera = 1;                // FK ID de la Carrera del Alumno
                oParticipante.PartIdSemestre = 1;               // Semestre que cursa el Alumno Inscrito 
            }
            @* DATOS DE LAS CREDENCIALES DE LA CUENTA EN LA APP *@
            oParticipante.PartContraseña = "";                  // Contraseña en la PLataforma del Participante Solicitante o Administrador
                                                                //oParticipante.PartRecuperarContraseña = false;    // Contraseña Temporal que se le proporciona al Participante Solicitante
            @* OTROS DATOS *@
            // oUsuario.UsuFechaHoraAlta = DateTime.Parse(DateTime.Now.ToString()).Year; // Fecha y Hora de Alta del Participante
            oParticipante.PartFileNameCredencialIpnine = "";            // Nombre del archivo de la credencial del participante
            oParticipante.PartFileSizeCredencialIpnine = 0l;            // Tamaño del archivo de la credencial del participante
            oParticipante.PartFileNameTarjetaCirculacion = "";          // Nombre del archivo de la tarjeta de circulación del participante
            oParticipante.PartFileSizeTarjetaCirculacion = 0l;          // Tamaño del archivo de la tarjeta de circulación del participante
            oParticipante.PartFileNameLicenciaConducir = "";            // Nombre del archivo de la licencia de conducir del participante
            oParticipante.PartFileSizeLicenciaConducir = 0l;            // Tamaño del archivo de la licencia de concudir del participante
            oParticipante.PartFileNameComprobanteEstudiosHorario = "";  // Nombre del archivo del comprobante de estudios del participante
            oParticipante.PartFileSizeComprobanteEstudiosHorario = 0l;  // Tamaño del archivo del comprobante de estudios del participante
            oParticipante.PartStatus = 1;                               // Participante (1 - Activo / 0 - Inactivo)

            @* DATOS FK NAVIGATION *@
            oParticipante.PartIdCarreraNavigation = null;
            oParticipante.PartIdRolNavigation = null;
            oParticipante.PartIdTipoParticipanteNavigation = null;

            IconButton = "send";
            TextButton = "Enviar Registro";
            BusyTextButton = "Enviando Registro ...";
        }
        else if (ActionAddEdit == "actualizar")
        {
            @* DATOS ID DEL USUARIO *@
            oParticipante.IdParticipante = oEditParticipante.IdParticipante;
            oParticipante.PartIdRol = oEditParticipante.PartIdRol;                          // FK ID del Rol (Participante del Sorteo, 2 - Administrador del Sorteo)
            oParticipante.PartIdTipoParticipante = oEditParticipante.PartIdTipoParticipante;// FK ID del Tipo de Participante ([1 - Alumno Inscrito], [2 - Maestria], [3 - Administrativo], [4 - Docente], [5 - Honorarios])
            @* DATOS PERSONALES *@
            oParticipante.PartNombre = oEditParticipante.PartNombre;                        // Nombre del Participante Solicitante o Administrador
            oParticipante.PartPrimerApellido = oEditParticipante.PartPrimerApellido;        // Primer Apellido del Participante Solicitante o Administrador
            oParticipante.PartSegundoApellido = oEditParticipante.PartSegundoApellido;      // Segundo Apellido del Participante Solicitante o Administrador
            oParticipante.PartCurp = oEditParticipante.PartCurp;                            // CURP con 18 caracteres como mínimo
            oParticipante.PartNoTelCelular = oEditParticipante.PartNoTelCelular;            // Número de Celular del Participante
            @* DATOS ACADÉMICOS *@
            oParticipante.PartBoleta = oEditParticipante.PartBoleta;                        // Número de Boleta del Participante
            oParticipante.PartIdCarrera = oEditParticipante.PartIdCarrera;                  // FK ID de la Carrera del Alumno
            oParticipante.PartIdSemestre = oEditParticipante.PartIdSemestre;                // Semestre que cursa el Alumno Inscrito 
            @* DATOS LABORALES *@
            oParticipante.PartNoEmpleado = oEditParticipante.PartNoEmpleado;                // Número del Empleado del Participante (Administrador o Docente)
            @* OTROS DATOS *@
            //oUsuario.UsuFechaHoraAlta = oEditUsuario.UsuFechaHoraAlta;                    // Fecha y Hora de Alta del Participante
            oParticipante.PartFileNameCredencialIpnine = oEditParticipante.PartFileNameCredencialIpnine;        // Nombre del Archivo en .pdf de la Credencial Ipn o Ine
            srcCredencialIpnine = oParticipante.PartFileNameCredencialIpnine != "Credencial-Ipn-Ine.pdf" ? $"/repositorio/{folder}/{oParticipante.IdParticipante}/{oParticipante.IdParticipante}_{oParticipante.PartFileNameCredencialIpnine}" : $"/repositorio/Credencial-Ipn-Ine.pdf";
            oParticipante.PartFileSizeCredencialIpnine = oEditParticipante.PartFileSizeCredencialIpnine;        // Tamaño del Archivo en .pdf de la Credencial Ipn o Ine
            
            oParticipante.PartFileNameLicenciaConducir = oEditParticipante.PartFileNameLicenciaConducir;        // Nombre del Archivo en .pdf de la Licencia de Conducir 
            srcLicenciaConducir = oParticipante.PartFileNameLicenciaConducir != "Licencia-Conducir.pdf" ? $"/repositorio/{folder}/{oParticipante.IdParticipante}/{oParticipante.IdParticipante}_{oParticipante.PartFileNameLicenciaConducir}" : $"/repositorio/Licencia-Conducir.pdf";
            oParticipante.PartFileSizeLicenciaConducir = oEditParticipante.PartFileSizeLicenciaConducir;        // Tamaño del Archivo en .pdf de la Licencia de Conducir 
       
            oParticipante.PartFileNameTarjetaCirculacion = oEditParticipante.PartFileNameTarjetaCirculacion;    // Nombre del Archivo en .pdf de la Tarjeta de Circulación
            srcTarjetaCirculacion = oParticipante.PartFileNameTarjetaCirculacion != "Tarjeta-Circulación.pdf" ? $"/repositorio/{folder}/{oParticipante.IdParticipante}/{oParticipante.IdParticipante}_{oParticipante.PartFileNameTarjetaCirculacion}" : $"/repositorio/Tarjeta-Circulación.pdf";
            oParticipante.PartFileSizeTarjetaCirculacion = oEditParticipante.PartFileSizeTarjetaCirculacion;    // Tamaño del Archivo en .pdf de la Tarjeta de Circulación

            oParticipante.PartFileNameComprobanteEstudiosHorario = oEditParticipante.PartFileNameComprobanteEstudiosHorario;    // Nombre del Archivo en .pdf del Comprobante de Estudios (Tira de Materias)
            srcComprobanteEstudiosHorario = oParticipante.PartFileNameComprobanteEstudiosHorario != "Comprobante-Estudios.pdf" ? $"/repositorio/{folder}/{oParticipante.IdParticipante}/{oParticipante.IdParticipante}_{oParticipante.PartFileNameComprobanteEstudiosHorario}" : $"/repositorio/Comprobante-Estudios.pdf";
            oParticipante.PartFileSizeComprobanteEstudiosHorario = oEditParticipante.PartFileSizeComprobanteEstudiosHorario;    // Tamaño del Archivo en .pdf del Comprobante de Estudios (Tira de Materias)
            oParticipante.PartStatus = oEditParticipante.PartStatus;                        // Usuario (1 - Activo / 0 - Inactivo)
            @* DATOS FK NAVIGATION *@
            oParticipante.PartIdCarreraNavigation = null;
            oParticipante.PartIdRolNavigation = null;
            oParticipante.PartIdTipoParticipanteNavigation = null;

            IconButton = "save_as";
            TextButton = "Editar Datos";
            BusyTextButton = "Actualizando Datos ...";
        }
    }


    @*///////////////////////////////////////////////  INICIALIZAR LISTA DE SEMESTRES  ///////////////////////////////////////////////*@
    public class Semestres
    {
        public string Key { get; set; }
        public string Value { get; set; }
    }

    private List<Semestres> oSemestres = new List<Semestres>
    {
        new Semestres() { Key = "1", Value = "1ro semestre" },
        new Semestres() { Key = "2", Value = "2do semestre" },
        new Semestres() { Key = "3", Value = "3ro semestre" },
        new Semestres() { Key = "4", Value = "4to semestre" },
        new Semestres() { Key = "5", Value = "5to semestre" },
        new Semestres() { Key = "6", Value = "6to semestre" },
        new Semestres() { Key = "7", Value = "7mo semestre" },
        new Semestres() { Key = "8", Value = "8vo semestre" },
    };


    @*///////////////////////////////////////////////  VALIDAR CAMPOS CONTRASEÑA Y CONFIRMAR CONTRASEÑA  ///////////////////////////////////////////////*@
    // Hacer visible las Contraseñas con el ícono eye
    private bool VisibleContraseña = true;
    private bool VisibleConfirmarContraseña = true;
    private async Task ToggleContraseña() => VisibleContraseña = !VisibleContraseña;
    private async Task ToggleConfirmarContraseña() => VisibleConfirmarContraseña = !VisibleConfirmarContraseña;

    // Comparar las Contraseñas
    private string PartContraseña = string.Empty;
    private string PartConfirmarContraseña = string.Empty;
    public bool flagErrorPasswords = false;
    private async Task CompararContraseñas()
    {
        if (ActionAddEdit == "agregar")
            flagErrorPasswords = !string.Equals(oParticipante.PartContraseña, PartConfirmarContraseña, StringComparison.Ordinal);
        else if (ActionAddEdit == "actualizar")
        {
            flagErrorPasswords = !string.Equals(PartContraseña, PartConfirmarContraseña, StringComparison.Ordinal);
            oParticipante.PartContraseña = !string.IsNullOrEmpty(PartContraseña) && !flagErrorPasswords ? SorteoEstacionamientos.Shared.CapaTools.Encrypt.GetSHA256(PartContraseña) : oEditParticipante.PartContraseña;
        }
    }

    @*///////////////////////////////////////////////  VALIDAR BOLETA DEL ALUMNO  ///////////////////////////////////////////////*@
    private bool flagErrorBoletaAlumno = false;
    private async Task ValidarBoleta() => flagErrorBoletaAlumno = !System.Text.RegularExpressions.Regex.IsMatch(oParticipante.PartBoleta, @"^\d{4}" + oEscuelas.Data.EscNoEscuela + @"\d{4}$");

    private void OnClick(string text)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Button Clicked", Detail = text });
    }

    @*///////////////////////////////////////////////  VALIDAR CAMPOS DEL FORMULARIO CON DATA_NOTATIONS  ///////////////////////////////////////////////*@
    private async Task OnInvalidHandled_ScrollToTop()
    {
        await JSRuntime.InvokeVoidAsync("window.scrollTo", 0, 0);
        await JSRuntime.InvokeVoidAsync("eval", $@"document.getElementById('names_{TipoParticipante}').select()");
    }


    @*///////////////////////////////////////////////  VALIDAR ReCAPTCHA  ////////////////////////////////////////////////////////////////////////*@
    private ReCAPTCHA oReCAPTCHAComponent;
    // private bool ServerVerificatiing = false;
    private bool ValidReCAPTCHA = false;
    private async Task OnSuccess() => ValidReCAPTCHA = true;
    private async Task OnExpired() => ValidReCAPTCHA = false;

    @*///////////////////////////////////////////////  AVISO DE PRIVACIDAD PARA LA PROTECCIÓN DE DATOS PERSONALES  ////////////////////////////////////*@
    private bool aceptar_aviso_privacidad = false;


    @*///////////////////////////////////////////////  VALIDAR CAMPOS DEL FORMULARIO ARCHIVOS PARA SUBIR  ///////////////////////////////////////////////*@
    // Subida de archivo
    private RadzenUpload? oUploadFile_CredencialIpnIne = new();
    private RadzenUpload? oUploadFile_ComprobanteEstudios = new();
    private RadzenUpload? oUploadFile_LicenciaConducir = new();
    private RadzenUpload? oUploadFile_TarjetaCirculacion = new();
    private IEnumerable<FileInfo>? oFileInfoCredencialIpnIne { get; set; }
    private IEnumerable<FileInfo>? oFileInfoComprobanteEstudiosHorario { get; set; }
    private IEnumerable<FileInfo>? oFileInfoLicenciaConducir { get; set; }
    private IEnumerable<FileInfo>? oFileInfoTarjetaCirculacion { get; set; }


    async Task OnChangeFiles(UploadChangeEventArgs args, string name)
    {
        foreach (var file in args.Files)
        {
            if (name == Credencial_Ipn_Ine)
            {
                oParticipante.PartFileNameCredencialIpnine = $"{Credencial_Ipn_Ine}_{oGuid}{Path.GetExtension(file.Name).ToLower()}";
                oParticipante.PartFileSizeCredencialIpnine = file.Size; // bytes
                oFileInfoCredencialIpnIne = args.Files;
            }
            else if (name == Comprobante_Estudios)
            {
                oParticipante.PartFileNameComprobanteEstudiosHorario = $"{Comprobante_Estudios}_{oGuid}{Path.GetExtension(file.Name).ToLower()}";
                oParticipante.PartFileSizeComprobanteEstudiosHorario = file.Size; // bytes
                oFileInfoComprobanteEstudiosHorario = args.Files;
            }
            else if (name == Licencia_Conducir)
            {
                oParticipante.PartFileNameLicenciaConducir = $"{Licencia_Conducir}_{oGuid}{Path.GetExtension(file.Name).ToLower()}";
                oParticipante.PartFileSizeLicenciaConducir = file.Size; // bytes
                oFileInfoLicenciaConducir = args.Files;
            }
            else if (name == Tarjeta_Circulacion)
            {
                oParticipante.PartFileNameTarjetaCirculacion = $"{Tarjeta_Circulacion}_{oGuid}{Path.GetExtension(file.Name).ToLower()}";
                oParticipante.PartFileSizeTarjetaCirculacion = file.Size; // bytes
                oFileInfoTarjetaCirculacion = args.Files;
            }
        }
    }

    async Task OnErrorFiles(UploadErrorEventArgs args, string name) => Console.WriteLine($"{args.Message}");

    async Task OnProgressFiles(UploadProgressArgs args, string name)
    {
        // Console.WriteLine($"{args.Progress}% '{name}' / {args.Loaded} of {args.Total} bytes.");

        if (args.Progress == 100)
        {
            foreach (var file in args.Files)
            {
                // Console.WriteLine($"Uploaded: {file.Name} / {file.Size} bytes");
            }
        }
    }

    async Task OnCompleteFiles(UploadCompleteEventArgs args) => Console.WriteLine($"Server response: {args.RawResponse}");


    @*///////////////////////////////////////////////  REGISTRAR PARTICIPANTE  //////////////////////////////////////////////////////////////////////*@
    private bool busyLoading = false;
    private bool DisablePostButton => ActionAddEdit == "agregar" ? !ValidReCAPTCHA || flagErrorBoletaAlumno || flagErrorPasswords || !aceptar_aviso_privacidad : !ValidReCAPTCHA || flagErrorBoletaAlumno || flagErrorPasswords;
    private string TextButton = string.Empty;
    private string BusyTextButton = string.Empty;
    private string IconButton = string.Empty;
    private string folder = "participantes";
    private string Credencial_Ipn_Ine = "Credencial-Ipn-Ine";
    private string Comprobante_Estudios = "Comprobante-Estudios";
    private string Licencia_Conducir = "Licencia-Conducir";
    private string Tarjeta_Circulacion = "Tarjeta-Circulación";
    private int idResponse = 0;
    private Guid oGuid = Guid.NewGuid();
    private Response<RequestViewModel_TipoParticipante> oTipoParticipantes = new();
    private Response<RequestViewModel_Carrera> oCarreras = new();


    public async Task OnValidHandled_Registrar()
    {
        try
        {
            busyLoading = true; 
            oTipoParticipantes = await servicioTipoParticipante.GetDataByIdAsync(oParticipante.PartIdTipoParticipante);
            oCarreras = await servicioCarrera.GetDataByIdAsync(oParticipante.PartIdCarrera);
            string boleta = (IdTipoParticipante == 1 || IdTipoParticipante == 2 ? oParticipante.PartBoleta : oParticipante.PartBoleta);
            //string carrera = (IdTipoParticipante == 1 || IdTipoParticipante == 2 ? oCarrera?.Data?.CarrNombre : "N/A");
            //string semestre = (IdTipoParticipante == 1 || IdTipoParticipante == 2 ? oParticipante.PartIdSemestre : "N/A");
            string fecha_hora_alta = ActionAddEdit == "agregar" ? DateTime.Now.ToString("dddd',' dd 'de' MMMM 'del' yyyy 'a las' HH:mm:ss 'hrs.'") : oParticipante.PartFechaHoraAlta.ToString("dddd',' dd 'de' MMMM 'del' yyyy 'a las' HH:mm:ss 'hrs.'");
            string agregar_actualizar = ActionAddEdit == "agregar" ? "registro" : "actualización de datos";
            string entrega_credenciales_acceso = !string.IsNullOrEmpty(PartContraseña) ? "<br>Por este medio se le hace entrega de sus <b>credenciales de acceso:</b><br>" : "";
            //string credenciales_acceso = !string.IsNullOrEmpty(PartContraseña) || ActionAddEdit == "agregar" ?

            @if (ActionAddEdit == "agregar")
            {
                //var verificacion = await servicioParticipante
            }






    }
        catch (Exception)
        {
            
            throw;
        }
    }



    Variant variant = Variant.Filled;
    AlertSize size = AlertSize.Medium;
    AlertStyle alertStyle = AlertStyle.Primary;

    public async Task OnValidHandled(){}


    //año
    DateTime value = DateTime.Now;

    void OnCurrentDateChanged(DateTime args)
    {
        value = new DateTime(args.Year, 1, 1);
    }
 

    @*///////////////////////////////////////////////  SHOW DIALOG MODAL iFRAME  //////////////////////////////////////////////////////////////////////*@
    private async Task ShowDialogModal_iFrame(string srciFrame, string title)
    {
        await DialogModalService.OpenAsync($@"<span style='font-variant: small-caps; font-size:18px;'>{title}<span>", ds =>
        @<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceEvenly" Gap="5px" class="w-100">
            <RadzenCard class="rz-shadow-0 rz-border-radius-0 rz-m-0 rz-p-0 w-100">
                <iframe src="@srciFrame" frameborder="1" scrolling="yes" class="w-100" style="height:500px;" />
            </RadzenCard>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Wrap="FlexWrap.NoWrap" Gap="5px" class="w-100">
                <RadzenButton Text="Cerrar"
                          BusyText=""
                          ButtonStyle="ButtonStyle.Warning"
                          ButtonType="ButtonType.Button"
                          IsBusy="false"
                          Icon="cancel"
                          class="rz-color-white rz-ripple rz-my-0 w-100"
                          Shade="Shade.Darker"
                          Click="@(() => ds.Close(false))" />
                <a href="@srciFrame" target="_blank" class="w-100">
                    <RadzenButton Text="Descargar"
                              BusyText=""
                              ButtonStyle="ButtonStyle.Secondary"
                              ButtonType="ButtonType.Button"
                              IsBusy="false"
                              Icon="download"
                              class="rz-ripple rz-my-0 w-100"
                              Shade="Shade.Dark" />
                </a>
            </RadzenStack>
        </RadzenStack>,
    new DialogOptions()
            {
                CloseDialogOnOverlayClick = true,
                CloseDialogOnEsc = true,
                Width = "600px",
                Height = "Auto",
                Resizable = true,
                ShowTitle = true,
                ShowClose = true,
                Draggable = true,
                CssClass = "custom-dialog-class",
                WrapperCssClass = "custom-dialog-wrapper-class"
            });
    }
    
}
